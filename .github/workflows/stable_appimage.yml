name: RetroArch AppImage Stable Build

on:
  create:
    tags:
      - v*

jobs:
  job1:
    name: Build RetroArch AppImage
    runs-on: ubuntu-latest

    steps:
    - name: Get tag name
      id: get_tag_name
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - uses: actions/checkout@v2
      with:
        ref: ${{ steps.get_tag_name.outputs.VERSION }}
    - uses: actions/checkout@v2
    - name: Fetch dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev libc6-dev libdbus-1-dev libdrm-dev libegl1-mesa-dev libfreetype6-dev libgbm-dev libglm-dev libjack-jackd2-dev libopenal-dev libpulse-dev libsdl2-dev libswscale-dev libudev-dev libusb-1.0-0-dev libv4l-dev libvulkan-dev libxinerama-dev libxml2-dev libxv-dev libxxf86vm-dev pkg-config python3-dev qt5-default qtbase5-dev wayland-protocols x11proto-xext-dev zlib1g-dev
    - name: Fetch linuxdeploy
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage
    - name: Build RetroArch
      run: |
        mkdir AppDir
        ./configure --prefix=/usr
        make -j8 && make install DESTDIR=AppDir prefix=/usr
        ./linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage
        mv RetroArch*.AppImage RetroArch-${{ steps.get_tag_name.outputs.VERSION }}.AppImage
    - name: Upload RetroArch AppImage
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: RetroArch-${{ steps.get_tag_name.outputs.VERSION }}.AppImage
        tag: ${{ steps.get_tag_name.outputs.VERSION }}
        asset_name: RetroArch-${{ steps.get_tag_name.outputs.VERSION }}.AppImage
        overwrite: true

  job2:
    name: Fetch and bundle assets
    runs-on: ubuntu-latest
      
    steps:
    - name: Get tag name
      id: get_tag_name
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - uses: actions/checkout@v2
      with:
        ref: ${{ steps.get_tag_name.outputs.VERSION }}
    - uses: actions/checkout@v2
    - name: Fetch dependencies
      run: sudo apt-get update ; sudo apt-get install p7zip-full
    - name: Create working directory
      run: mkdir working_dir
    - name: Make dirs
      working-directory: working_dir
      run: mkdir assets cores shaders database cheats
    - name: Fetch assets
      working-directory: working_dir
      run: cd assets && wget https://buildbot.libretro.com/assets/frontend/assets.zip && unzip assets.zip && rm assets.zip
    - name: Fetch overlays
      working-directory: working_dir
      run: git clone https://github.com/libretro/common-overlays.git && mv common-overlays overlays
    - name: Fetch autoconfigs
      working-directory: working_dir
      run: git clone https://github.com/libretro/retroarch-joypad-autoconfig.git && mv retroarch-joypad-autoconfig autoconfig
    - name: Fetch shaders
      working-directory: working_dir
      run: cd shaders && git clone https://github.com/libretro/glsl-shaders.git && git clone https://github.com/libretro/slang-shaders.git
    - name: Fetch databases
      working-directory: working_dir
      run: cd database && wget https://buildbot.libretro.com/assets/frontend/database-rdb.zip && unzip database-rdb.zip && rm database-rdb.zip
    - name: Fetch cheats
      working-directory: working_dir
      run: cd cheats && wget https://buildbot.libretro.com/assets/frontend/cheats.zip && unzip cheats.zip && rm cheats.zip
    - name: Fetch core info
      working-directory: working_dir
      run: cd cores && wget https://buildbot.libretro.com/assets/frontend/info.zip && unzip info.zip && rm info.zip
    - name: Zip it up!
      working-directory: working_dir
      run: 7z a RetroArch-${{ steps.get_tag_name.outputs.VERSION }}.AppImage.config.7z *
    - name: Upload assets bundle
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: working_dir/RetroArch-${{ steps.get_tag_name.outputs.VERSION }}.AppImage.config.7z
        tag: ${{ steps.get_tag_name.outputs.VERSION }}
        asset_name: RetroArch-${{ steps.get_tag_name.outputs.VERSION }}.AppImage.config.7z
        overwrite: true
