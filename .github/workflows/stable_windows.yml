name: RetroArch Windows Stable Build

on:
  create:
    tags:
      - v*

jobs:
  job1:
    name: Build RetroArch AppImage
    runs-on: windows-latest

    steps:
    - name: Get tag name
      id: get_tag_name
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - uses: actions/checkout@v2
      with:
        ref: ${{ steps.get_tag_name.outputs.VERSION }}
    - uses: numworks/setup-msys2@v1
      with:
        msystem: MINGW64
    - name: Fetch dependencies
      run: |
        msys2do pacman --noconfirm -Su
        msys2do pacman -S --noconfirm --needed wget git make mingw-w64-x86_64-toolchain mingw-w64-x86_64-ntldd mingw-w64-x86_64-zlib mingw-w64-x86_64-pkg-config mingw-w64-x86_64-SDL2 mingw-w64-x86_64-libxml2 mingw-w64-x86_64-freetype mingw-w64-x86_64-python3 mingw-w64-x86_64-ffmpeg mingw-w64-x86_64-drmingw p7zip
    - name: Build RetroArch
      run: |
        msys2do ./configure
        msys2do make -j8
    - name: Create working directory
      run: mkdir working_dir
    - name: Make dirs
      working-directory: working_dir
      run: mkdir assets cores shaders database cheats
    - name: Fetch assets
      working-directory: working_dir
      run: cd assets && wget https://buildbot.libretro.com/assets/frontend/assets.zip && unzip assets.zip && rm assets.zip
    - name: Fetch overlays
      working-directory: working_dir
      run: git clone https://github.com/libretro/common-overlays.git && mv common-overlays overlays
    - name: Fetch autoconfigs
      working-directory: working_dir
      run: git clone https://github.com/libretro/retroarch-joypad-autoconfig.git && mv retroarch-joypad-autoconfig autoconfig
    - name: Fetch shaders
      working-directory: working_dir
      run: cd shaders && git clone https://github.com/libretro/glsl-shaders.git && git clone https://github.com/libretro/slang-shaders.git
    - name: Fetch databases
      working-directory: working_dir
      run: cd database && wget https://buildbot.libretro.com/assets/frontend/database-rdb.zip && unzip database-rdb.zip && rm database-rdb.zip
    - name: Fetch cheats
      working-directory: working_dir
      run: cd cheats && wget https://buildbot.libretro.com/assets/frontend/cheats.zip && unzip cheats.zip && rm cheats.zip
    - name: Fetch core info
      working-directory: working_dir
      run: cd cores && wget https://buildbot.libretro.com/assets/frontend/info.zip && unzip info.zip && rm info.zip
    - name: Gather the libs
      run: msys2do for( $i in $(seq 3)){ for( $bin in $(ntldd -R *exe | grep -i mingw | cut -d">" -f2 | cut -d" " -f2)){ cp -vu "$bin" . } }
    - name: Zip just the libs
      run: 7z a redist_libs-${{ steps.get_tag_name.outputs.VERSION }}.7z *.dll
    - name: Move executables and libs to working dir
      run: mv *.exe working_dir && mv *.dll working_dir
    - name: Zip the full release
      working-directory: working_dir
      run: 7z a RetroArch-Win-x86_64_${{ steps.get_tag_name.outputs.VERSION }}.7z *
    - name: Upload RetroArch release bundle
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: working_dir/RetroArch-Win-x86_64_${{ steps.get_tag_name.outputs.VERSION }}.7z
        tag: ${{ steps.get_tag_name.outputs.VERSION }}
        asset_name: RetroArch-Win-x86_64_${{ steps.get_tag_name.outputs.VERSION }}.7z
        overwrite: true
    - name: Upload redist libs
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: redist_libs-${{ steps.get_tag_name.outputs.VERSION }}.7z
        tag: ${{ steps.get_tag_name.outputs.VERSION }}
        asset_name: redist_libs-${{ steps.get_tag_name.outputs.VERSION }}.7z
        overwrite: true
