
name: RetroArch Stable Recipe

on:
  create:
    tags:
      - v*

jobs:
  Assets:
    name: Collect and bundle assets
    runs-on: ubuntu-latest
    
    steps:
    - name: Get tag name
      id: get_tag_name
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - uses: actions/checkout@v2
      with:
        ref: ${{ steps.get_tag_name.outputs.VERSION }}
    - uses: actions/checkout@v2
    - run: mkdir working_dir
    - name: Fetch assets repo
      working-directory: working_dir
      run: git clone https://github.com/libretro/retroarch-assets.git
    - name: Clear unused assets
      working-directory: working_dir
      run: mv retroarch-assets assets && rm -rf assets/branding assets/wallpaper/* assets/src assets/.git
    - name: Fetch overlays repo
      working-directory: working_dir
      run: git clone https://github.com/libretro/common-overlays.git && mv common-overlays overlays && rm -rf overlays/.git
    - name: Fetch autoconfig repo
      working-directory: working_dir
      run: git clone https://github.com/libretro/retroarch-joypad-autoconfig.git && mv retroarch-joypad-autoconfig autoconfig && rm -rf autoconfig/.git
    - name: Fetch libretro-super repo and isolate info files
      working-directory: working_dir
      run: git clone https://github.com/libretro/libretro-super.git && mv libretro-super/dist/info ./ && rm -rf libretro-super
    - run: mkdir working_dir/shaders
    - name: Fetch shader repos
      working-directory: working_dir/shaders
      run: |
        git clone https://github.com/libretro/common-shaders.git && mv common-shaders shaders_cg && rm -rf shaders_cg/.git
        git clone https://github.com/libretro/glsl-shaders.git && mv glsl-shaders shaders_glsl && rm -rf shaders_glsl/.git
        git clone https://github.com/libretro/slang-shaders.git && mv slang-shaders shaders_slang && rm -rf shaders_slang/.git
    - name: Fetch database repo and isolate rdb and cheats
      working-directory: working_dir
      run: git clone https://github.com/libretro/libretro-database.git && mv libretro-database/rdb ./database && mv libretro-database/cht ./cheats && rm -rf libretro-database
    - name: Bundle assets
      working-directory: working_dir
      run: 7z a -mx=9 ../RetroArch-Linux-x86_64-${{ steps.get_tag_name.outputs.VERSION }}.AppImage.config.7z *
    - name: Upload Linux AppImage assets bundle
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: RetroArch-Linux-x86_64-${{ steps.get_tag_name.outputs.VERSION }}.AppImage.config.7z
        tag: ${{ steps.get_tag_name.outputs.VERSION }}
        asset_name: RetroArch-Linux-x86_64-${{ steps.get_tag_name.outputs.VERSION }}.AppImage.config.7z
        overwrite: true
    - run: mv RetroArch-Linux-x86_64-${{ steps.get_tag_name.outputs.VERSION }}.AppImage.config.7z assets.7z
    - name: Upload assets bundle
      uses: actions/upload-artifact@v2
      with:
        name: assets.7z
        path: assets.7z
        
  Linux:
    name: Build RetroArch Linux AppImage Stable
    runs-on: ubuntu-latest

    steps:
    - name: Get tag name
      id: get_tag_name
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - uses: actions/checkout@v2
      with:
        ref: ${{ steps.get_tag_name.outputs.VERSION }}
    - uses: actions/checkout@v2
    - name: Fetch dependencies
      run: sudo apt-get update ; sudo apt-get install libasound2-dev libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev libc6-dev libdbus-1-dev libdrm-dev libegl1-mesa-dev libfreetype6-dev libgbm-dev libglm-dev libjack-jackd2-dev libopenal-dev libpulse-dev libsdl2-dev libswscale-dev libudev-dev libusb-1.0-0-dev libv4l-dev libvulkan-dev libxinerama-dev libxml2-dev libxv-dev libxxf86vm-dev pkg-config python3-dev qt5-default qtbase5-dev wayland-protocols x11proto-xext-dev zlib1g-dev
    - name: Fetch linuxdeploy
      run: wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage && chmod +x linuxdeploy-x86_64.AppImage
    - name: Build RetroArch
      run: mkdir AppDir && ./configure --prefix=/usr && make -j8 && make install DESTDIR=AppDir prefix=/usr && ../linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage && mv RetroArch*.AppImage RetroArch-Linux-x86_64-${{ steps.get_tag_name.outputs.VERSION }}.AppImage
    - name: Upload RetroArch AppImage
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: RetroArch-Linux-x86_64-${{ steps.get_tag_name.outputs.VERSION }}.AppImage
        tag: ${{ steps.get_tag_name.outputs.VERSION }}
        asset_name: RetroArch-Linux-x86_64-${{ steps.get_tag_name.outputs.VERSION }}.AppImage
        overwrite: true
        
  Windows:
    name: Build RetroArch Stable Windows
    needs: Assets
    runs-on: windows-latest

    steps:
    - uses: numworks/setup-msys2@v1
      with:
        msystem: MINGW64
    - run: msys2do pacman -S --noconfirm --disable-download-timeout --needed wget git make mingw-w64-x86_64-binutils mingw-w64-x86_64-toolchain mingw-w64-x86_64-ntldd mingw-w64-x86_64-zlib mingw-w64-x86_64-pkg-config mingw-w64-x86_64-SDL2 mingw-w64-x86_64-libxml2 mingw-w64-x86_64-freetype mingw-w64-x86_64-python3 mingw-w64-x86_64-ffmpeg mingw-w64-x86_64-drmingw mingw-w64-x86_64-qt5 mingw-w64-x86_64-openssl unzip p7zip
    - uses: actions/checkout@v2
    - name: Configure
      run: msys2do ./configure --enable-qt
    - name: Build
      run: msys2do make -j8
    - name: Setup working dir
      run: mkdir working_dir
    - name: Qt deploy
      run: msys2do windeployqt --release --no-patchqt --no-translations retroarch.exe
    - name: Gather Qt libs
      run: ForEach ($l in $(msys2do ntldd.exe -R 'imageformats/*dll' | grep mingw64 | sed -e 's/^[ \t]*//'|cut -d' ' -f3)){cp "$l" working_dir/}
    - name: Gather the other libs
      working-directory: RetroArch
      run: ForEach ($l in $(msys2do ntldd.exe -R '*.exe'|grep mingw64|sed -e 's/^[ \t]*//'|cut -d' ' -f3)){cp "$l" working_dir/}
    - name: Free up some disk space
      run: msys2do rm -rf .git && msys2do pacman -Rsu --noconfirm mingw-w64-x86_64-toolchain mingw-w64-x86_64-qt5 mingw-w64-x86_64-openssl
    - name: Create debug exe and strip regular exe
      run: msys2do cp retroarch.exe retroarch_debug.exe && strip.exe -s retroarch.exe
    - name: Move executables to working dir (libs are already there)
      working-directory: RetroArch
      run: mv *.exe working_dir/
    - name: Get tag name
      id: get_tag_name
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      shell: bash
    - name: Zip just the executables and libs
      working-directory: working_dir
      run: 7z a -mx=9 RetroArch-Win-x86_64-${{ steps.get_tag_name.outputs.VERSION }}_Update-Pack.7z *.exe *dll
    - name: Upload Update Pack
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: working_dir/RetroArch-Win-x86_64-${{ steps.get_tag_name.outputs.VERSION }}_Update-Pack.7z
        tag: ${{ steps.get_tag_name.outputs.VERSION }}
        asset_name: RetroArch-Win-x86_64-${{ steps.get_tag_name.outputs.VERSION }}_Update-Pack.7z
        overwrite: true
    - name: Download assets package from previous job
      uses: actions/download-artifact@v2
      with:
        name: assets.7z
    - name: Extract assets
      working-directory: working_dir
      run: mv ../assets.7z ./ && msys2do 7z x assets.7z && msys2do rm -rf assets.7z
    - name: Zip the full release
      working-directory: working_dir
      run: 7z a -mx=9 RetroArch-Win-x86_64-${{ steps.get_tag_name.outputs.VERSION }}_Full.7z *
    - name: Upload RetroArch release bundle
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: working_dir/RetroArch-Win-x86_64-${{ steps.get_tag_name.outputs.VERSION }}_Full.7z
        tag: ${{ steps.get_tag_name.outputs.VERSION }}
        asset_name: RetroArch-Win-x86_64-${{ steps.get_tag_name.outputs.VERSION }}_Full.7z
        overwrite: true

